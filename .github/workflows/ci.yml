name: CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_DATABASE: auth
          MYSQL_ROOT_PASSWORD: 0000
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Install MySQL Client
        run: sudo apt-get update && sudo apt-get install -y mysql-client


      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: 'auth'
          mysql user: 'root'
          mysql password: '0000'

      - name: Wait for MySQL to be ready (real query)
        run: |
          for i in {1..20}; do
            if mysql -h 127.0.0.1 -P 3306 -u root -p0000 -e 'SELECT 1'; then
              echo "MySQL is ready!"
              break
            fi
            echo "Waiting for MySQL to be ready..."
            sleep 5
          done

      - name: Create application.properties
        run: |
          mkdir -p ./src/main/resources

          cat <<EOT > ./src/main/resources/application.properties
          spring.application.name=auth
          spring.config.import=classpath:application-secret.properties
          
          spring.datasource.url=jdbc:mysql://localhost:3306/auth
          spring.datasource.username=root
          spring.datasource.password=0000
          spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
          
          spring.jpa.hibernate.ddl-auto=update
          spring.jpa.show-sql=true
          spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
          EOT
          
          cat <<EOT > ./src/main/resources/application-secret.properties
          jwt.secret=${{ secrets.JWT_SECRET }}
          EOT

      - name: Grant execute permission for Gradle Wrapper
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build