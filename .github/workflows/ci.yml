name: CI FOR MVP

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ main, develop ]

jobs:
  CI:
    name: Continuous Integration
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          mysql database: 'auth'
          mysql user: 'root'
          mysql password: '0000'

      - name: Wait for MySQL to be ready
        run: |
          echo "Waiting for MySQL..."
          for i in {1..30}; do
            nc -z 127.0.0.1 3306 && echo "MySQL is up!" && exit 0
            echo "Waiting ($i)..."
            sleep 2
          done
          echo "MySQL did not start in time." && exit 1

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: Create application.properties & secrets
        run: |
          mkdir -p ./src/main/resources
          cat <<EOT > ./src/main/resources/application.properties
          spring.application.name=auth
          spring.config.import=classpath:application-secret.properties

          # 기본 환경용 DB (운영 또는 dev)
          spring.datasource.url=jdbc:mysql://localhost:3306/auth
          spring.datasource.username=root
          spring.datasource.password=0000
          spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

          spring.jpa.hibernate.ddl-auto=update
          spring.jpa.show-sql=true
          spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
          EOT

          cat <<EOT > ./src/main/resources/application-secret.properties
          jwt.secret=${{ secrets.JWT_SECRET }}
          jwt.access-token-expiration=${{ secrets.JWT_ACCESS_EXPIRATION }}
          jwt.refresh-token-expiration=${{ secrets.JWT_REFRESH_EXPIRATION }}
          EOT

      - name: Create application-test.properties
        run: |
          mkdir -p ./src/test/resources
          cat <<EOT > ./src/test/resources/application-test.properties
          spring.datasource.url=jdbc:h2:mem:testdb
          spring.datasource.driver-class-name=org.h2.Driver
          spring.datasource.username=sa
          spring.datasource.password=
          spring.jpa.hibernate.ddl-auto=create-drop
          
          EOT

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Run tests with test profile
        run: ./gradlew test -Dspring.profiles.active=test